import pandas as pd

def analyze_demographics(df):
    # 1. How many people of each race are represented in this dataset?
    race_counts = df['race'].value_counts()

    # 2. What is the average age of men?
    average_age_men = df[df['sex'] == 'Male']['age'].mean()

    # 3. What is the percentage of people who have a Bachelor's degree?
    percentage_bachelors = (df['education'] == 'Bachelors').mean() * 100

    # 4. What percentage of people with advanced education (Bachelors, Masters, or Doctorate) make more than 50K?
    advanced_education = df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
    percentage_advanced_education_high_income = (df[advanced_education]['salary'] == '>50K').mean() * 100

    # 5. What percentage of people without advanced education make more than 50K?
    no_advanced_education = ~advanced_education
    percentage_no_advanced_education_high_income = (df[no_advanced_education]['salary'] == '>50K').mean() * 100

    # 6. What is the minimum number of hours a person works per week?
    min_hours_per_week = df['hours-per-week'].min()

    # 7. What percentage of the people who work the minimum number of hours per week have a salary of more than 50K?
    min_hours_high_income_percentage = (df[df['hours-per-week'] == min_hours_per_week]['salary'] == '>50K').mean() * 100

    # 8. What country has the highest percentage of people that earn >50K and what is that percentage?
    country_income_percentage = df[df['salary'] == '>50K']['native-country'].value_counts() / df['native-country'].value_counts() * 100
    highest_country_percentage = country_income_percentage.idxmax()
    highest_country_percentage_value = country_income_percentage.max()

    # 9. Identify the most popular occupation for those who earn >50K in India.
    india_high_income_occupation = df[(df['native-country'] == 'India') & (df['salary'] == '>50K')]['occupation'].value_counts().idxmax()

    # Create a dictionary to store the results
    results = {
        'race_counts': race_counts,
        'average_age_men': round(average_age_men, 1),
        'percentage_bachelors': round(percentage_bachelors, 1),
        'percentage_advanced_education_high_income': round(percentage_advanced_education_high_income, 1),
        'percentage_no_advanced_education_high_income': round(percentage_no_advanced_education_high_income, 1),
        'min_hours_per_week': min_hours_per_week,
        'min_hours_high_income_percentage': round(min_hours_high_income_percentage, 1),
        'highest_country_percentage': (highest_country_percentage, round(highest_country_percentage_value, 1)),
        'india_high_income_occupation': india_high_income_occupation
    }

    return results

# Example usage:
if __name__ == "__main__":
    # Load the dataset
    df = pd.read_csv('census_data.csv')
    results = analyze_demographics(df)
    for key, value in results.items():
        print(f"{key}: {value}")
race_counts = df['race'].value_counts()
average_age_men = df[df['sex'] == 'Male']['age'].mean()
percentage_bachelors = (df['education'] == 'Bachelors').mean() * 100
advanced_education = df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
percentage_advanced_education_high_income = (df[advanced_education]['salary'] == '>50K').mean() * 100
no_advanced_education = ~advanced_education
percentage_no_advanced_education_high_income = (df[no_advanced_education]['salary'] == '>50K').mean() * 100
min_hours_per_week = df['hours-per-week'].min()
min_hours_high_income_percentage = (df[df['hours-per-week'] == min_hours_per_week]['salary'] == '>50K').mean() * 100
country_income_percentage = df[df['salary'] == '>50K']['native-country'].value_counts() / df['native-country'].value_counts() * 100
highest_country_percentage = country_income_percentage.idxmax()
highest_country_percentage_value = country_income_percentage.max()
country_income_percentage = df[df['salary'] == '>50K']['native-country'].value_counts() / df['native-country'].value_counts() * 100
highest_country_percentage = country_income_percentage.idxmax()
highest_country_percentage_value = country_income_percentage.max()
india_high_income_occupation = df[(df['native-country'] == 'India') & (df['salary'] == '>50K')]['occupation'].value_counts().idxmax()
